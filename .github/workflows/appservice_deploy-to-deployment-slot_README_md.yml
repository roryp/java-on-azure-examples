on: 
  schedule: 
    - cron: '0 9 * * 1'
  workflow_dispatch: 

name: 'appservice/deploy-to-deployment-slot/README.md'
jobs: 
  validate: 
    runs-on: 'ubuntu-latest'
    steps: 
      - uses: 'azure/login@v1'
        with: 
          allow-no-subscriptions: 'true'
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - uses: 'actions/checkout@v2'
      - run: | 
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=java-on-azure-$RANDOM
          fi
          export REGION=westus2
          az group create --name $RESOURCE_GROUP --location $REGION
          export DELETE_AFTER=$(( `date +%s` + 7200))
          az group update --name $RESOURCE_GROUP --set tags.'DeleteAfter'="$DELETE_AFTER"
          if [[ -z $APPSERVICE_PLAN ]]; then
          export APPSERVICE_PLAN=appservice-plan-$RANDOM
          fi
          az appservice plan create \
          --resource-group $RESOURCE_GROUP \
          --location $REGION \
          --name $APPSERVICE_PLAN \
          --is-linux \
          --sku P1V2
          
          cd appservice/tomcat-helloworld
          
          mvn clean install
          export APPSERVICE_TOMCAT_HELLOWORLD=appservice-tomcat-helloworld-$RANDOM
          mvn azure-webapp:deploy \
          -DappName=$APPSERVICE_TOMCAT_HELLOWORLD \
          -DappServicePlan=$APPSERVICE_PLAN \
          -DresourceGroup=$RESOURCE_GROUP
          
          sleep 60
          cd ../..
          
          az webapp deployment slot create \
          --resource-group $RESOURCE_GROUP \
          --name $APPSERVICE_TOMCAT_HELLOWORLD \
          --slot staging
          
          cd appservice/deploy-to-deployment-slot
          
          mvn clean install
          mvn azure-webapp:deploy \
          -DappName=$APPSERVICE_TOMCAT_HELLOWORLD \
          -DappServicePlan=$APPSERVICE_PLAN \
          -DresourceGroup=$RESOURCE_GROUP \
          -DdeploymentSlotName=staging
          
          cd ../..
          
          
          export RESULT=$(az webapp deployment slot list --resource-group $RESOURCE_GROUP --name $APPSERVICE_TOMCAT_HELLOWORLD --output tsv --query [0].state)
          if [[ "$RESULT" != Running ]]; then
          echo 'Deployment slot is NOT running'
          az group delete --name $RESOURCE_GROUP --yes || true
          exit 1
          fi
          
          sleep 60
          
          export URL=https://$(az webapp deployment slot list --resource-group $RESOURCE_GROUP --name $APPSERVICE_TOMCAT_HELLOWORLD --output tsv --query [0].defaultHostName)
          export RESULT=$(curl $URL)
          
          az group delete --name $RESOURCE_GROUP --yes || true
          
          if [[ "$RESULT" != *"Hello Staging"* ]]; then
          echo "Response did not contain 'Hello Staging'"
          exit 1
          fi